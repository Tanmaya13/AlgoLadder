# Generated by Django 2.1.7 on 2020-04-20 14:54

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CodingProblems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('question', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('total_submissions', models.IntegerField(blank=True, default=0)),
                ('time_limit', models.FloatField(blank=True, default=1)),
                ('memory_limit', models.IntegerField(blank=True, default=50000)),
                ('points', models.IntegerField(blank=True, default=100)),
                ('editorial', models.FileField(blank=True, null=True, upload_to='solutions')),
            ],
        ),
        migrations.CreateModel(
            name='CodingSubmissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_output', models.TextField(default='')),
                ('result', models.NullBooleanField(default=None)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.CodingProblems')),
            ],
        ),
        migrations.CreateModel(
            name='Contests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('contest_link', models.CharField(max_length=1000)),
                ('overview', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('start_on', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('end_on', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('A', 'Active'), ('P', 'Past'), ('U', 'Upcoming')], default='A', max_length=1)),
                ('coding_problems', models.ManyToManyField(blank=True, to='contest.CodingProblems')),
            ],
        ),
        migrations.CreateModel(
            name='McqProblems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('optiona', models.TextField(max_length=100)),
                ('optionb', models.TextField(max_length=100)),
                ('optionc', models.TextField(max_length=100)),
                ('optiond', models.TextField(max_length=100)),
                ('correct_ans', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='McqSubmissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_output', models.IntegerField(default=0)),
                ('result', models.NullBooleanField(default=None)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.McqProblems')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mcqsubmissions',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.UserProfile'),
        ),
        migrations.AddField(
            model_name='contests',
            name='mcq_problems',
            field=models.ManyToManyField(blank=True, to='contest.McqProblems'),
        ),
        migrations.AddField(
            model_name='codingsubmissions',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.UserProfile'),
        ),
    ]
